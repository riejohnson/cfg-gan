#!/bin/bash
#####  Evaluate images given in the form of pgm/ppm files, using 
#####  a pre-trained classifier. 
#####  Use this for evaluating images generated by some other system. 
#####  To be comparable with the paper, use 10K images.  
#####  input: 10k ppm/pgm files
#####  output: score in stdout

  gpu=-1   # <= Change this to use a specific GPU.  "-1" means "Use default".

  dir=ppm  # <= Change this to the directory where your ppm/pgm files are. 
           #    All the files at this directory are considered to be images 
           #    to be evaluated, and so don't put anything else there. 
           #    pgm: the one with "P5" at http://netpbm.sourceforge.net/doc/pgm.html
           #    ppm: the one with "P6" at http://netpbm.sourceforge.net/doc/ppm.html
           #    For both, use one byte per pixel (i.e., Maxval < 256). 
           
  nm=svhn  # <= Change this to the name of dataset used for training. 
           #    Use "mnist", "svhn", "brlr", or "twbg".  
           
  padsz=0  # <= Change this if images need to be padded by zero.  
           #    If your MNIST images are 28x28, set padsz=2 as the 
           #    classifier expects 32x32.  

  fnm=eval-ppm
  source func.sh
  gpumem=${gpu}:4
  mynm=_eval-ppm_

  #---  Convert ppm/pgm files to the xbin format. 
  echo; echo "***  Converting ppm/pgm files to the xbin format ..."
  ofn=${gendir}/${mynm}.xbin
  $prepImg ppmpgm_to_xbin $ofn $padsz ${dir}/*
  if [ $? != 0 ]; then echo $fnm: conversion to the xbin format failed.; exit 1; fi

  #---  Evaluate images. 
  echo; echo "***  Evaluating images ... "
  $exe $gpumem eval_img classif_fn=${clsdir}/${nm}-cls.ReNet \
             tstname=${gendir}/${mynm} datatype=imgbin x_ext=.xbin \
             Scale-1+1 \
             mini_batch_size=64
  if [ $? != 0 ]; then echo $fnm: evaluation failed.; exit 1; fi